@model Entities.Concrete.Lesson

@{
    ViewData["Title"] = "AddLesson";
}

<h1>AddLesson</h1>

<h4>Lesson</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddLesson">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="LessonName" class="control-label"></label>
                <input asp-for="LessonName" name="LessonName" class="form-control" />
                <span asp-validation-for="LessonName" class="text-danger"></span>
            </div>
              <div class="form-group">
                <label asp-for="LessonCredit" class="control-label"></label>
                <input asp-for="LessonCredit" name="LessonCredit" class="form-control" />
                <span asp-validation-for="LessonCredit" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input onclick="return ekle()" type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}

<script>
    function ekle() {

        LessonName = $('#LessonName').val();

        if (LessonName == "") {
            alert("Lesson Name can not be empty!");
            return false;
        }
    }
</script>
